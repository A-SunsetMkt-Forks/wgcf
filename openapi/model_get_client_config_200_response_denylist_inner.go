/*
untitled API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 536
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the GetClientConfig200ResponseDenylistInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetClientConfig200ResponseDenylistInner{}

// GetClientConfig200ResponseDenylistInner struct for GetClientConfig200ResponseDenylistInner
type GetClientConfig200ResponseDenylistInner struct {
	AndroidPackages []string `json:"android-packages,omitempty"`
	Name string `json:"name"`
	Networks *GetClientConfig200ResponseDenylistInnerNetworks `json:"networks,omitempty"`
	Visible bool `json:"visible"`
	AdditionalProperties map[string]interface{}
}

type _GetClientConfig200ResponseDenylistInner GetClientConfig200ResponseDenylistInner

// NewGetClientConfig200ResponseDenylistInner instantiates a new GetClientConfig200ResponseDenylistInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetClientConfig200ResponseDenylistInner(name string, visible bool) *GetClientConfig200ResponseDenylistInner {
	this := GetClientConfig200ResponseDenylistInner{}
	this.Name = name
	this.Visible = visible
	return &this
}

// NewGetClientConfig200ResponseDenylistInnerWithDefaults instantiates a new GetClientConfig200ResponseDenylistInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetClientConfig200ResponseDenylistInnerWithDefaults() *GetClientConfig200ResponseDenylistInner {
	this := GetClientConfig200ResponseDenylistInner{}
	return &this
}

// GetAndroidPackages returns the AndroidPackages field value if set, zero value otherwise.
func (o *GetClientConfig200ResponseDenylistInner) GetAndroidPackages() []string {
	if o == nil || IsNil(o.AndroidPackages) {
		var ret []string
		return ret
	}
	return o.AndroidPackages
}

// GetAndroidPackagesOk returns a tuple with the AndroidPackages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetClientConfig200ResponseDenylistInner) GetAndroidPackagesOk() ([]string, bool) {
	if o == nil || IsNil(o.AndroidPackages) {
		return nil, false
	}
	return o.AndroidPackages, true
}

// HasAndroidPackages returns a boolean if a field has been set.
func (o *GetClientConfig200ResponseDenylistInner) HasAndroidPackages() bool {
	if o != nil && !IsNil(o.AndroidPackages) {
		return true
	}

	return false
}

// SetAndroidPackages gets a reference to the given []string and assigns it to the AndroidPackages field.
func (o *GetClientConfig200ResponseDenylistInner) SetAndroidPackages(v []string) {
	o.AndroidPackages = v
}

// GetName returns the Name field value
func (o *GetClientConfig200ResponseDenylistInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GetClientConfig200ResponseDenylistInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GetClientConfig200ResponseDenylistInner) SetName(v string) {
	o.Name = v
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *GetClientConfig200ResponseDenylistInner) GetNetworks() GetClientConfig200ResponseDenylistInnerNetworks {
	if o == nil || IsNil(o.Networks) {
		var ret GetClientConfig200ResponseDenylistInnerNetworks
		return ret
	}
	return *o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetClientConfig200ResponseDenylistInner) GetNetworksOk() (*GetClientConfig200ResponseDenylistInnerNetworks, bool) {
	if o == nil || IsNil(o.Networks) {
		return nil, false
	}
	return o.Networks, true
}

// HasNetworks returns a boolean if a field has been set.
func (o *GetClientConfig200ResponseDenylistInner) HasNetworks() bool {
	if o != nil && !IsNil(o.Networks) {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given GetClientConfig200ResponseDenylistInnerNetworks and assigns it to the Networks field.
func (o *GetClientConfig200ResponseDenylistInner) SetNetworks(v GetClientConfig200ResponseDenylistInnerNetworks) {
	o.Networks = &v
}

// GetVisible returns the Visible field value
func (o *GetClientConfig200ResponseDenylistInner) GetVisible() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value
// and a boolean to check if the value has been set.
func (o *GetClientConfig200ResponseDenylistInner) GetVisibleOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Visible, true
}

// SetVisible sets field value
func (o *GetClientConfig200ResponseDenylistInner) SetVisible(v bool) {
	o.Visible = v
}

func (o GetClientConfig200ResponseDenylistInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetClientConfig200ResponseDenylistInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AndroidPackages) {
		toSerialize["android-packages"] = o.AndroidPackages
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Networks) {
		toSerialize["networks"] = o.Networks
	}
	toSerialize["visible"] = o.Visible

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetClientConfig200ResponseDenylistInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"visible",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetClientConfig200ResponseDenylistInner := _GetClientConfig200ResponseDenylistInner{}

	err = json.Unmarshal(data, &varGetClientConfig200ResponseDenylistInner)

	if err != nil {
		return err
	}

	*o = GetClientConfig200ResponseDenylistInner(varGetClientConfig200ResponseDenylistInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "android-packages")
		delete(additionalProperties, "name")
		delete(additionalProperties, "networks")
		delete(additionalProperties, "visible")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetClientConfig200ResponseDenylistInner struct {
	value *GetClientConfig200ResponseDenylistInner
	isSet bool
}

func (v NullableGetClientConfig200ResponseDenylistInner) Get() *GetClientConfig200ResponseDenylistInner {
	return v.value
}

func (v *NullableGetClientConfig200ResponseDenylistInner) Set(val *GetClientConfig200ResponseDenylistInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetClientConfig200ResponseDenylistInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetClientConfig200ResponseDenylistInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetClientConfig200ResponseDenylistInner(val *GetClientConfig200ResponseDenylistInner) *NullableGetClientConfig200ResponseDenylistInner {
	return &NullableGetClientConfig200ResponseDenylistInner{value: val, isSet: true}
}

func (v NullableGetClientConfig200ResponseDenylistInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetClientConfig200ResponseDenylistInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


