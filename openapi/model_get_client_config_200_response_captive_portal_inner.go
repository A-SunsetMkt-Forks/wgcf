/*
Cloudflare WARP API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 536
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the GetClientConfig200ResponseCaptivePortalInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetClientConfig200ResponseCaptivePortalInner{}

// GetClientConfig200ResponseCaptivePortalInner struct for GetClientConfig200ResponseCaptivePortalInner
type GetClientConfig200ResponseCaptivePortalInner struct {
	Name string `json:"name"`
	Networks []GetClientConfig200ResponseCaptivePortalInnerNetworksInner `json:"networks"`
	AdditionalProperties map[string]interface{}
}

type _GetClientConfig200ResponseCaptivePortalInner GetClientConfig200ResponseCaptivePortalInner

// NewGetClientConfig200ResponseCaptivePortalInner instantiates a new GetClientConfig200ResponseCaptivePortalInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetClientConfig200ResponseCaptivePortalInner(name string, networks []GetClientConfig200ResponseCaptivePortalInnerNetworksInner) *GetClientConfig200ResponseCaptivePortalInner {
	this := GetClientConfig200ResponseCaptivePortalInner{}
	this.Name = name
	this.Networks = networks
	return &this
}

// NewGetClientConfig200ResponseCaptivePortalInnerWithDefaults instantiates a new GetClientConfig200ResponseCaptivePortalInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetClientConfig200ResponseCaptivePortalInnerWithDefaults() *GetClientConfig200ResponseCaptivePortalInner {
	this := GetClientConfig200ResponseCaptivePortalInner{}
	return &this
}

// GetName returns the Name field value
func (o *GetClientConfig200ResponseCaptivePortalInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GetClientConfig200ResponseCaptivePortalInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GetClientConfig200ResponseCaptivePortalInner) SetName(v string) {
	o.Name = v
}

// GetNetworks returns the Networks field value
func (o *GetClientConfig200ResponseCaptivePortalInner) GetNetworks() []GetClientConfig200ResponseCaptivePortalInnerNetworksInner {
	if o == nil {
		var ret []GetClientConfig200ResponseCaptivePortalInnerNetworksInner
		return ret
	}

	return o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value
// and a boolean to check if the value has been set.
func (o *GetClientConfig200ResponseCaptivePortalInner) GetNetworksOk() ([]GetClientConfig200ResponseCaptivePortalInnerNetworksInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Networks, true
}

// SetNetworks sets field value
func (o *GetClientConfig200ResponseCaptivePortalInner) SetNetworks(v []GetClientConfig200ResponseCaptivePortalInnerNetworksInner) {
	o.Networks = v
}

func (o GetClientConfig200ResponseCaptivePortalInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetClientConfig200ResponseCaptivePortalInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["networks"] = o.Networks

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetClientConfig200ResponseCaptivePortalInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"networks",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetClientConfig200ResponseCaptivePortalInner := _GetClientConfig200ResponseCaptivePortalInner{}

	err = json.Unmarshal(data, &varGetClientConfig200ResponseCaptivePortalInner)

	if err != nil {
		return err
	}

	*o = GetClientConfig200ResponseCaptivePortalInner(varGetClientConfig200ResponseCaptivePortalInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "networks")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetClientConfig200ResponseCaptivePortalInner struct {
	value *GetClientConfig200ResponseCaptivePortalInner
	isSet bool
}

func (v NullableGetClientConfig200ResponseCaptivePortalInner) Get() *GetClientConfig200ResponseCaptivePortalInner {
	return v.value
}

func (v *NullableGetClientConfig200ResponseCaptivePortalInner) Set(val *GetClientConfig200ResponseCaptivePortalInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetClientConfig200ResponseCaptivePortalInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetClientConfig200ResponseCaptivePortalInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetClientConfig200ResponseCaptivePortalInner(val *GetClientConfig200ResponseCaptivePortalInner) *NullableGetClientConfig200ResponseCaptivePortalInner {
	return &NullableGetClientConfig200ResponseCaptivePortalInner{value: val, isSet: true}
}

func (v NullableGetClientConfig200ResponseCaptivePortalInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetClientConfig200ResponseCaptivePortalInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


