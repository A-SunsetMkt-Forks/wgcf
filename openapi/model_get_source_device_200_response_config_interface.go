/*
untitled API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 536
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the GetSourceDevice200ResponseConfigInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSourceDevice200ResponseConfigInterface{}

// GetSourceDevice200ResponseConfigInterface struct for GetSourceDevice200ResponseConfigInterface
type GetSourceDevice200ResponseConfigInterface struct {
	Addresses GetSourceDevice200ResponseConfigInterfaceAddresses `json:"addresses"`
	AdditionalProperties map[string]interface{}
}

type _GetSourceDevice200ResponseConfigInterface GetSourceDevice200ResponseConfigInterface

// NewGetSourceDevice200ResponseConfigInterface instantiates a new GetSourceDevice200ResponseConfigInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSourceDevice200ResponseConfigInterface(addresses GetSourceDevice200ResponseConfigInterfaceAddresses) *GetSourceDevice200ResponseConfigInterface {
	this := GetSourceDevice200ResponseConfigInterface{}
	this.Addresses = addresses
	return &this
}

// NewGetSourceDevice200ResponseConfigInterfaceWithDefaults instantiates a new GetSourceDevice200ResponseConfigInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSourceDevice200ResponseConfigInterfaceWithDefaults() *GetSourceDevice200ResponseConfigInterface {
	this := GetSourceDevice200ResponseConfigInterface{}
	return &this
}

// GetAddresses returns the Addresses field value
func (o *GetSourceDevice200ResponseConfigInterface) GetAddresses() GetSourceDevice200ResponseConfigInterfaceAddresses {
	if o == nil {
		var ret GetSourceDevice200ResponseConfigInterfaceAddresses
		return ret
	}

	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value
// and a boolean to check if the value has been set.
func (o *GetSourceDevice200ResponseConfigInterface) GetAddressesOk() (*GetSourceDevice200ResponseConfigInterfaceAddresses, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Addresses, true
}

// SetAddresses sets field value
func (o *GetSourceDevice200ResponseConfigInterface) SetAddresses(v GetSourceDevice200ResponseConfigInterfaceAddresses) {
	o.Addresses = v
}

func (o GetSourceDevice200ResponseConfigInterface) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSourceDevice200ResponseConfigInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["addresses"] = o.Addresses

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetSourceDevice200ResponseConfigInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"addresses",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetSourceDevice200ResponseConfigInterface := _GetSourceDevice200ResponseConfigInterface{}

	err = json.Unmarshal(data, &varGetSourceDevice200ResponseConfigInterface)

	if err != nil {
		return err
	}

	*o = GetSourceDevice200ResponseConfigInterface(varGetSourceDevice200ResponseConfigInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "addresses")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetSourceDevice200ResponseConfigInterface struct {
	value *GetSourceDevice200ResponseConfigInterface
	isSet bool
}

func (v NullableGetSourceDevice200ResponseConfigInterface) Get() *GetSourceDevice200ResponseConfigInterface {
	return v.value
}

func (v *NullableGetSourceDevice200ResponseConfigInterface) Set(val *GetSourceDevice200ResponseConfigInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSourceDevice200ResponseConfigInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSourceDevice200ResponseConfigInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSourceDevice200ResponseConfigInterface(val *GetSourceDevice200ResponseConfigInterface) *NullableGetSourceDevice200ResponseConfigInterface {
	return &NullableGetSourceDevice200ResponseConfigInterface{value: val, isSet: true}
}

func (v NullableGetSourceDevice200ResponseConfigInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSourceDevice200ResponseConfigInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


