/*
untitled API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 536
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the GetAccount200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAccount200Response{}

// GetAccount200Response struct for GetAccount200Response
type GetAccount200Response struct {
	AccountType string `json:"account_type"`
	Created string `json:"created"`
	Id string `json:"id"`
	License string `json:"license"`
	PremiumData float32 `json:"premium_data"`
	Quota float32 `json:"quota"`
	ReferralCount float32 `json:"referral_count"`
	ReferralRenewalCountdown float32 `json:"referral_renewal_countdown"`
	Role string `json:"role"`
	Updated string `json:"updated"`
	WarpPlus bool `json:"warp_plus"`
	AdditionalProperties map[string]interface{}
}

type _GetAccount200Response GetAccount200Response

// NewGetAccount200Response instantiates a new GetAccount200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAccount200Response(accountType string, created string, id string, license string, premiumData float32, quota float32, referralCount float32, referralRenewalCountdown float32, role string, updated string, warpPlus bool) *GetAccount200Response {
	this := GetAccount200Response{}
	this.AccountType = accountType
	this.Created = created
	this.Id = id
	this.License = license
	this.PremiumData = premiumData
	this.Quota = quota
	this.ReferralCount = referralCount
	this.ReferralRenewalCountdown = referralRenewalCountdown
	this.Role = role
	this.Updated = updated
	this.WarpPlus = warpPlus
	return &this
}

// NewGetAccount200ResponseWithDefaults instantiates a new GetAccount200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAccount200ResponseWithDefaults() *GetAccount200Response {
	this := GetAccount200Response{}
	return &this
}

// GetAccountType returns the AccountType field value
func (o *GetAccount200Response) GetAccountType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value
// and a boolean to check if the value has been set.
func (o *GetAccount200Response) GetAccountTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountType, true
}

// SetAccountType sets field value
func (o *GetAccount200Response) SetAccountType(v string) {
	o.AccountType = v
}

// GetCreated returns the Created field value
func (o *GetAccount200Response) GetCreated() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *GetAccount200Response) GetCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *GetAccount200Response) SetCreated(v string) {
	o.Created = v
}

// GetId returns the Id field value
func (o *GetAccount200Response) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetAccount200Response) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GetAccount200Response) SetId(v string) {
	o.Id = v
}

// GetLicense returns the License field value
func (o *GetAccount200Response) GetLicense() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.License
}

// GetLicenseOk returns a tuple with the License field value
// and a boolean to check if the value has been set.
func (o *GetAccount200Response) GetLicenseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.License, true
}

// SetLicense sets field value
func (o *GetAccount200Response) SetLicense(v string) {
	o.License = v
}

// GetPremiumData returns the PremiumData field value
func (o *GetAccount200Response) GetPremiumData() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PremiumData
}

// GetPremiumDataOk returns a tuple with the PremiumData field value
// and a boolean to check if the value has been set.
func (o *GetAccount200Response) GetPremiumDataOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PremiumData, true
}

// SetPremiumData sets field value
func (o *GetAccount200Response) SetPremiumData(v float32) {
	o.PremiumData = v
}

// GetQuota returns the Quota field value
func (o *GetAccount200Response) GetQuota() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Quota
}

// GetQuotaOk returns a tuple with the Quota field value
// and a boolean to check if the value has been set.
func (o *GetAccount200Response) GetQuotaOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quota, true
}

// SetQuota sets field value
func (o *GetAccount200Response) SetQuota(v float32) {
	o.Quota = v
}

// GetReferralCount returns the ReferralCount field value
func (o *GetAccount200Response) GetReferralCount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ReferralCount
}

// GetReferralCountOk returns a tuple with the ReferralCount field value
// and a boolean to check if the value has been set.
func (o *GetAccount200Response) GetReferralCountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReferralCount, true
}

// SetReferralCount sets field value
func (o *GetAccount200Response) SetReferralCount(v float32) {
	o.ReferralCount = v
}

// GetReferralRenewalCountdown returns the ReferralRenewalCountdown field value
func (o *GetAccount200Response) GetReferralRenewalCountdown() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ReferralRenewalCountdown
}

// GetReferralRenewalCountdownOk returns a tuple with the ReferralRenewalCountdown field value
// and a boolean to check if the value has been set.
func (o *GetAccount200Response) GetReferralRenewalCountdownOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReferralRenewalCountdown, true
}

// SetReferralRenewalCountdown sets field value
func (o *GetAccount200Response) SetReferralRenewalCountdown(v float32) {
	o.ReferralRenewalCountdown = v
}

// GetRole returns the Role field value
func (o *GetAccount200Response) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *GetAccount200Response) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *GetAccount200Response) SetRole(v string) {
	o.Role = v
}

// GetUpdated returns the Updated field value
func (o *GetAccount200Response) GetUpdated() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value
// and a boolean to check if the value has been set.
func (o *GetAccount200Response) GetUpdatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Updated, true
}

// SetUpdated sets field value
func (o *GetAccount200Response) SetUpdated(v string) {
	o.Updated = v
}

// GetWarpPlus returns the WarpPlus field value
func (o *GetAccount200Response) GetWarpPlus() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.WarpPlus
}

// GetWarpPlusOk returns a tuple with the WarpPlus field value
// and a boolean to check if the value has been set.
func (o *GetAccount200Response) GetWarpPlusOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WarpPlus, true
}

// SetWarpPlus sets field value
func (o *GetAccount200Response) SetWarpPlus(v bool) {
	o.WarpPlus = v
}

func (o GetAccount200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAccount200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_type"] = o.AccountType
	toSerialize["created"] = o.Created
	toSerialize["id"] = o.Id
	toSerialize["license"] = o.License
	toSerialize["premium_data"] = o.PremiumData
	toSerialize["quota"] = o.Quota
	toSerialize["referral_count"] = o.ReferralCount
	toSerialize["referral_renewal_countdown"] = o.ReferralRenewalCountdown
	toSerialize["role"] = o.Role
	toSerialize["updated"] = o.Updated
	toSerialize["warp_plus"] = o.WarpPlus

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetAccount200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_type",
		"created",
		"id",
		"license",
		"premium_data",
		"quota",
		"referral_count",
		"referral_renewal_countdown",
		"role",
		"updated",
		"warp_plus",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetAccount200Response := _GetAccount200Response{}

	err = json.Unmarshal(data, &varGetAccount200Response)

	if err != nil {
		return err
	}

	*o = GetAccount200Response(varGetAccount200Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "account_type")
		delete(additionalProperties, "created")
		delete(additionalProperties, "id")
		delete(additionalProperties, "license")
		delete(additionalProperties, "premium_data")
		delete(additionalProperties, "quota")
		delete(additionalProperties, "referral_count")
		delete(additionalProperties, "referral_renewal_countdown")
		delete(additionalProperties, "role")
		delete(additionalProperties, "updated")
		delete(additionalProperties, "warp_plus")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetAccount200Response struct {
	value *GetAccount200Response
	isSet bool
}

func (v NullableGetAccount200Response) Get() *GetAccount200Response {
	return v.value
}

func (v *NullableGetAccount200Response) Set(val *GetAccount200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAccount200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAccount200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAccount200Response(val *GetAccount200Response) *NullableGetAccount200Response {
	return &NullableGetAccount200Response{value: val, isSet: true}
}

func (v NullableGetAccount200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAccount200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


